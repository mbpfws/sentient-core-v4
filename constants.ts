
import { WorkflowGraph, NodeStatus, NodeType, Language } from './types';

const defaultRefinePrompt = (task: string, document: string, feedback: string, lang: Language) => 
`The previous attempt for the task "${task}" was rejected with the following feedback: "${feedback}".
Please generate a new version that incorporates this feedback.

Previous Attempt:
${document}

Generate a new, improved version now. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`;


export const INITIAL_WORKFLOW_GRAPH: WorkflowGraph = {
  nodes: [
    {
      id: 'n1',
      label: 'Input Analysis',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 25, y: 250 },
      details: "Analyzes the user's initial idea to establish a baseline understanding of complexity and core features.",
      taskPrompt: (projectDesc, _s, _o, lang) => `Analyze the following project description. Identify the core problem, the main user base, and the key features. Determine a complexity score (Low, Medium, High). Provide a concise, one-paragraph summary. Project: "${projectDesc}". The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n2',
      label: 'Executive Summary',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 250, y: 50 },
      details: 'Generates a high-level executive summary covering objectives, scope, and strategic roadmap.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Senior Project Manager. Create a detailed outline for a one-page Executive Summary for a software project. The project is: "${projectDesc}". The initial analysis is: "${synthesis}". The outline should have clear sections for Project Vision, Problem Statement, Proposed Solution, Key Objectives (SMART goals), Scope (In-Scope/Out-of-Scope), and a high-level Strategic Roadmap (MVP, Phase 2). Format as a markdown list. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Using the following outline and initial analysis, write a professional, comprehensive Executive Summary. The summary must be detailed, persuasive, and suitable for project stakeholders. Initial Analysis: "${synthesis}".\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n3',
      label: 'Tech Stack (2025)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      useSearch: true,
      position: { x: 250, y: 450 },
      details: 'Recommends a future-proof tech stack using Google Search, focusing on trends for 2025.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Chief Technology Officer. Create an outline for a Technology Stack Recommendation document for the project: "${projectDesc}". The initial analysis is: "${synthesis}". The outline should cover: Frontend Framework, Backend Framework/Language, Database (SQL/NoSQL), Authentication Service, Deployment/Hosting Platform, and AI/ML Integration (if applicable). Use Google Search to find modern, scalable technologies suitable for a 2025 launch. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Based on the project analysis ("${synthesis}") and the approved outline below, generate a detailed Technology Stack Recommendation document. For each item in the outline, provide a specific technology choice (e.g., Next.js, FastAPI, PostgreSQL, NextAuth.js, Vercel) and write a strong, data-backed rationale for why it's the best fit for this project, considering scalability, performance, and developer ecosystem. Use the latest information from your search results.\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 's1',
      label: 'Design Synthesis',
      nodeType: NodeType.SYNTHESIS,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 500, y: 250 },
      details: "Synthesizes the executive summary and tech stack to create a focused brief for system architecture design.",
      synthesisPrompt: (projectDesc, prev, lang) => `Synthesize the following documents into a coherent brief for an architect. The goal is to inform the System Architecture design. Extract key business goals from the Executive Summary and technical constraints/choices from the Tech Stack. Project: "${projectDesc}"\n\nExecutive Summary:\n${prev['n2']}\n\nTech Stack:\n${prev['n3']}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
    },
    {
      id: 'n4',
      label: 'System Architecture',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 700, y: 250 },
      details: 'Designs the high-level system architecture and generates a Mermaid diagram for visualization.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Lead Solutions Architect. Based on this design brief: "${synthesis}", create an outline for a System Architecture document for the project: "${projectDesc}". The outline must include sections for: Core Components (e.g., Frontend App, API Gateway, Services), Data Flow, Authentication Strategy, and a plan for a MermaidJS diagram to visualize the components. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Using the design brief ("${synthesis}") and the approved outline, write a detailed System Architecture document. Describe each component's responsibility and its interactions. After the description, provide a valid MermaidJS graph diagram code block (using \`\`\`mermaid) that visually represents the described architecture.\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n5',
      label: 'DB Schema (SQL)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 100 },
      details: 'Generates the SQL DDL for the core database tables based on the system architecture.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Database Administrator. Based on the system architecture ("${synthesis}") for project "${projectDesc}", create an outline of the core database tables required. For each table, list the key columns you plan to include. This is a high-level plan, not the final SQL. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Based on the architectural context ("${synthesis}") and the approved schema outline below, write the complete and normalized SQL DDL (CREATE TABLE statements) for the project. Ensure you include primary keys, foreign key constraints, indexes, and appropriate data types (e.g., UUID, TEXT, TIMESTAMPTZ).\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n6',
      label: 'API Design (OpenAPI)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 400 },
      details: 'Creates a sample OpenAPI specification for the key API endpoints.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Backend Engineer. Based on the system architecture ("${synthesis}") for project "${projectDesc}", create an outline of the key API resources and their primary endpoints (e.g., /users, GET, POST). For each endpoint, briefly describe its purpose. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Using the architectural context ("${synthesis}") and the approved API outline below, generate a partial OpenAPI 3.0.x specification in YAML format. Detail the paths, operations (GET, POST), parameters, and basic request/response schemas for the 2-3 most critical endpoints.\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n7',
      label: 'Front-end Mockup Interfaces',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 700 },
      details: 'Generates professional SVG-based UI mockups and wireframes for key application interfaces.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a UI/UX Designer. Based on the system architecture ("${synthesis}") for project "${projectDesc}", create an outline of the key user interfaces and pages that need to be designed. For each interface, describe its purpose, key components (buttons, forms, navigation), and user interactions. Include wireframe specifications for layout structure. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Using the architectural context ("${synthesis}") and the approved UI outline below, generate professional SVG-based mockups for the key user interfaces. Create clean, modern designs with proper typography, spacing, and visual hierarchy. For each interface, provide:\n\n1. Complete SVG code with proper structure\n2. Responsive design considerations\n3. Component specifications (buttons, forms, navigation)\n4. Accessibility features (ARIA labels, proper contrast)\n5. Interactive element states (hover, focus, disabled)\n\nFocus on creating realistic, professional-looking interfaces that could be directly used for development.\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n8',
      label: 'Architectural Visualizer',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 700, y: 500 },
      details: 'Creates comprehensive system architecture diagrams using Mermaid syntax for visualization.',
      outlinePrompt: (projectDesc, synthesis, lang) => `You are a Solutions Architect. Based on the system design ("${synthesis}") for project "${projectDesc}", create an outline for comprehensive architectural diagrams. Include plans for: System Architecture Overview, Data Flow Diagrams, API Layer Design, Database Relationships (ERD), Deployment Pipeline, and Component Dependencies. For each diagram type, specify what elements and relationships should be visualized. The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Using the architectural context ("${synthesis}") and the approved diagram outline below, generate comprehensive Mermaid diagrams for the system architecture. Create the following diagram types:\n\n1. **System Architecture**: High-level component overview using Mermaid architecture diagrams\n2. **Data Flow**: Process flow showing data movement between components\n3. **API Design**: Sequence diagrams for key API interactions\n4. **Database Schema**: Entity-Relationship Diagram showing table relationships\n5. **Deployment Pipeline**: Flowchart showing CI/CD stages\n6. **Component Dependencies**: Graph showing module and service dependencies\n\nFor each diagram, provide:\n- Valid Mermaid syntax in code blocks\n- Clear labels and descriptions\n- Proper relationships and connections\n- Professional styling and layout\n\nApproved Outline:\n${outline}\n\nThe response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n9',
      label: 'Final Report',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 1400, y: 400 },
      details: 'Compiles all generated artifacts into a single, comprehensive project definition report.',
      taskPrompt: (projectDesc, _s, prevOutputs, lang) => `Compile a comprehensive final report for project "${projectDesc}". The report should be well-structured and formatted in Markdown. Include the following sections, using the provided content. If a document is missing, state that it was not generated.\n\n# Project Definition: ${projectDesc}\n\n## 1. Executive Summary\n${prevOutputs['n2'] || 'Not generated.'}\n\n## 2. Technology Stack Recommendation\n${prevOutputs['n3'] || 'Not generated.'}\n\n## 3. System Architecture\n${prevOutputs['n4'] || 'Not generated.'}\n\n## 4. Database Schema (SQL DDL)\n${prevOutputs['n5'] || 'Not generated.'}\n\n## 5. API Design (OpenAPI Spec)\n${prevOutputs['n6'] || 'Not generated.'}\n\n## 6. Front-end Mockup Interfaces\n${prevOutputs['n7'] || 'Not generated.'}\n\n## 7. Architectural Visualizations\n${prevOutputs['n8'] || 'Not generated.'}\n\n---\n\n*This report was auto-generated by the Autonomous App Dev System.* The response must be in ${lang === 'vi' ? 'Vietnamese' : 'English'}.`,
    },
  ],
  edges: [
    { id: 'e1-2', source: 'n1', target: 'n2' },
    { id: 'e1-3', source: 'n1', target: 'n3' },
    { id: 'e2-s1', source: 'n2', target: 's1' },
    { id: 'e3-s1', source: 'n3', target: 's1' },
    { id: 's1-n4', source: 's1', target: 'n4' },
    { id: 'n4-n5', source: 'n4', target: 'n5' },
    { id: 'n4-n6', source: 'n4', target: 'n6' },
    { id: 'n4-n7', source: 'n4', target: 'n7' },
    { id: 'n4-n8', source: 'n4', target: 'n8' },
    { id: 'n2-n9', source: 'n2', target: 'n9' },
    { id: 'n3-n9', source: 'n3', target: 'n9' },
    { id: 'n4-n9', source: 'n4', target: 'n9' },
    { id: 'n5-n9', source: 'n5', target: 'n9' },
    { id: 'n6-n9', source: 'n6', target: 'n9' },
    { id: 'n7-n9', source: 'n7', target: 'n9' },
    { id: 'n8-n9', source: 'n8', target: 'n9' },
  ],
};


export const VIETNAMESE_WORKFLOW_GRAPH: WorkflowGraph = {
  nodes: [
    {
      id: 'n1',
      label: 'Phân tích Đầu vào',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 25, y: 250 },
      details: "Phân tích ý tưởng ban đầu của người dùng để thiết lập sự hiểu biết cơ bản về độ phức tạp và các tính năng cốt lõi.",
      taskPrompt: (projectDesc, _s, _o, lang) => `Phân tích mô tả dự án sau. Xác định vấn đề cốt lõi, đối tượng người dùng chính và các tính năng chính. Xác định điểm phức tạp (Thấp, Trung bình, Cao). Cung cấp một bản tóm tắt ngắn gọn, một đoạn. Dự án: "${projectDesc}". Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n2',
      label: 'Tóm tắt Điều hành',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 250, y: 50 },
      details: 'Tạo một bản tóm tắt điều hành cấp cao bao gồm các mục tiêu, phạm vi và lộ trình chiến lược.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Quản lý Dự án Cấp cao. Tạo một đề cương chi tiết cho một bản Tóm tắt Điều hành dài một trang cho một dự án phần mềm. Dự án là: "${projectDesc}". Phân tích ban đầu là: "${synthesis}". Đề cương nên có các phần rõ ràng cho Tầm nhìn Dự án, Tuyên bố Vấn đề, Giải pháp Đề xuất, Mục tiêu Chính (mục tiêu SMART), Phạm vi (Trong phạm vi/Ngoài phạm vi) và một Lộ trình Chiến lược cấp cao (MVP, Giai đoạn 2). Định dạng dưới dạng danh sách markdown. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Sử dụng đề cương và phân tích ban đầu sau đây, viết một bản Tóm tắt Điều hành chuyên nghiệp, toàn diện. Bản tóm tắt phải chi tiết, thuyết phục và phù hợp với các bên liên quan của dự án. Phân tích ban đầu: "${synthesis}".\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n3',
      label: 'Công nghệ (2025)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      useSearch: true,
      position: { x: 250, y: 450 },
      details: 'Đề xuất một bộ công nghệ có khả năng chống lỗi thời bằng Google Search, tập trung vào các xu hướng cho năm 2025.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Giám đốc Công nghệ. Tạo một đề cương cho tài liệu Đề xuất Bộ Công nghệ cho dự án: "${projectDesc}". Phân tích ban đầu là: "${synthesis}". Đề cương nên bao gồm: Framework Frontend, Framework/Ngôn ngữ Backend, Cơ sở dữ liệu (SQL/NoSQL), Dịch vụ Xác thực, Nền tảng Triển khai/Lưu trữ và Tích hợp AI/ML (nếu có). Sử dụng Google Search để tìm các công nghệ hiện đại, có khả năng mở rộng phù hợp cho việc ra mắt vào năm 2025. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Dựa trên phân tích dự án ("${synthesis}") và đề cương đã được phê duyệt dưới đây, tạo một tài liệu Đề xuất Bộ Công nghệ chi tiết. Đối với mỗi mục trong đề cương, cung cấp một lựa chọn công nghệ cụ thể (ví dụ: Next.js, FastAPI, PostgreSQL, NextAuth.js, Vercel) và viết một lý do mạnh mẽ, có dữ liệu chứng minh tại sao nó là lựa chọn tốt nhất cho dự án này, xem xét khả năng mở rộng, hiệu suất và hệ sinh thái nhà phát triển. Sử dụng thông tin mới nhất từ kết quả tìm kiếm của bạn.\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 's1',
      label: 'Tổng hợp Thiết kế',
      nodeType: NodeType.SYNTHESIS,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 500, y: 250 },
      details: "Tổng hợp bản tóm tắt điều hành và bộ công nghệ để tạo ra một bản tóm tắt tập trung cho thiết kế kiến trúc hệ thống.",
      synthesisPrompt: (projectDesc, prev, lang) => `Tổng hợp các tài liệu sau thành một bản tóm tắt mạch lạc cho một kiến trúc sư. Mục tiêu là để thông báo cho thiết kế Kiến trúc Hệ thống. Trích xuất các mục tiêu kinh doanh chính từ Tóm tắt Điều hành và các ràng buộc/lựa chọn kỹ thuật từ Bộ Công nghệ. Dự án: "${projectDesc}"\n\nTóm tắt Điều hành:\n${prev['n2']}\n\nBộ Công nghệ:\n${prev['n3']}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
    },
    {
      id: 'n4',
      label: 'Kiến trúc Hệ thống',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 700, y: 250 },
      details: 'Thiết kế kiến trúc hệ thống cấp cao và tạo sơ đồ Mermaid để trực quan hóa.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Kiến trúc sư Giải pháp chính. Dựa trên bản tóm tắt thiết kế này: "${synthesis}", tạo một đề cương cho tài liệu Kiến trúc Hệ thống cho dự án: "${projectDesc}". Đề cương phải bao gồm các phần cho: Các thành phần cốt lõi (ví dụ: Ứng dụng Frontend, Cổng API, Dịch vụ), Luồng dữ liệu, Chiến lược xác thực và kế hoạch cho một sơ đồ MermaidJS để trực quan hóa các thành phần. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Sử dụng bản tóm tắt thiết kế ("${synthesis}") và đề cương đã được phê duyệt, viết một tài liệu Kiến trúc Hệ thống chi tiết. Mô tả trách nhiệm của từng thành phần và sự tương tác của chúng. Sau phần mô tả, cung cấp một khối mã sơ đồ đồ thị MermaidJS hợp lệ (sử dụng \`\`\`mermaid) đại diện trực quan cho kiến trúc được mô tả.\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n5',
      label: 'Lược đồ CSDL (SQL)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 100 },
      details: 'Tạo SQL DDL cho các bảng cơ sở dữ liệu cốt lõi dựa trên kiến trúc hệ thống.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Quản trị viên Cơ sở dữ liệu. Dựa trên kiến trúc hệ thống ("${synthesis}") cho dự án "${projectDesc}", tạo một đề cương về các bảng cơ sở dữ liệu cốt lõi cần thiết. Đối với mỗi bảng, liệt kê các cột chính bạn dự định bao gồm. Đây là một kế hoạch cấp cao, không phải là SQL cuối cùng. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Dựa trên bối cảnh kiến trúc ("${synthesis}") và đề cương lược đồ đã được phê duyệt dưới đây, viết SQL DDL (câu lệnh CREATE TABLE) hoàn chỉnh và được chuẩn hóa cho dự án. Đảm bảo bạn bao gồm các khóa chính, ràng buộc khóa ngoại, chỉ mục và các kiểu dữ liệu phù hợp (ví dụ: UUID, TEXT, TIMESTAMPTZ).\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n6',
      label: 'Thiết kế API (OpenAPI)',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 400 },
      details: 'Tạo một đặc tả OpenAPI mẫu cho các điểm cuối API chính.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Kỹ sư Backend. Dựa trên kiến trúc hệ thống ("${synthesis}") cho dự án "${projectDesc}", tạo một đề cương về các tài nguyên API chính và các điểm cuối chính của chúng (ví dụ: /users, GET, POST). Đối với mỗi điểm cuối, mô tả ngắn gọn mục đích của nó. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Sử dụng bối cảnh kiến trúc ("${synthesis}") và đề cương API đã được phê duyệt dưới đây, tạo một đặc tả OpenAPI 3.0.x một phần ở định dạng YAML. Chi tiết hóa các đường dẫn, hoạt động (GET, POST), tham số và các lược đồ yêu cầu/phản hồi cơ bản cho 2-3 điểm cuối quan trọng nhất.\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n7',
      label: 'Giao diện Mockup Frontend',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 950, y: 700 },
      details: 'Tạo các mockup giao diện người dùng chuyên nghiệp dựa trên SVG và wireframe cho các giao diện ứng dụng chính.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Nhà thiết kế UI/UX. Dựa trên kiến trúc hệ thống ("${synthesis}") cho dự án "${projectDesc}", tạo một đề cương về các giao diện người dùng và trang chính cần được thiết kế. Đối với mỗi giao diện, mô tả mục đích, các thành phần chính (nút, biểu mẫu, điều hướng) và tương tác người dùng. Bao gồm đặc tả wireframe cho cấu trúc bố cục. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Sử dụng bối cảnh kiến trúc ("${synthesis}") và đề cương UI đã được phê duyệt dưới đây, tạo các mockup chuyên nghiệp dựa trên SVG cho các giao diện người dùng chính. Tạo các thiết kế sạch sẽ, hiện đại với kiểu chữ, khoảng cách và thứ bậc trực quan phù hợp. Đối với mỗi giao diện, cung cấp:\n\n1. Mã SVG hoàn chỉnh với cấu trúc phù hợp\n2. Cân nhắc thiết kế responsive\n3. Đặc tả thành phần (nút, biểu mẫu, điều hướng)\n4. Tính năng truy cập (nhãn ARIA, độ tương phản phù hợp)\n5. Trạng thái phần tử tương tác (hover, focus, disabled)\n\nTập trung vào việc tạo ra các giao diện thực tế, chuyên nghiệp có thể được sử dụng trực tiếp cho phát triển.\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n8',
      label: 'Trực quan hóa Kiến trúc',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: true,
      position: { x: 700, y: 500 },
      details: 'Tạo các sơ đồ kiến trúc hệ thống toàn diện sử dụng cú pháp Mermaid để trực quan hóa.',
      outlinePrompt: (projectDesc, synthesis, lang) => `Bạn là một Kiến trúc sư Giải pháp. Dựa trên thiết kế hệ thống ("${synthesis}") cho dự án "${projectDesc}", tạo một đề cương cho các sơ đồ kiến trúc toàn diện. Bao gồm kế hoạch cho: Tổng quan Kiến trúc Hệ thống, Sơ đồ Luồng Dữ liệu, Thiết kế Lớp API, Mối quan hệ Cơ sở dữ liệu (ERD), Pipeline Triển khai và Phụ thuộc Thành phần. Đối với mỗi loại sơ đồ, chỉ định các phần tử và mối quan hệ nào cần được trực quan hóa. Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      taskPrompt: (_pd, synthesis, outline, lang) => `Sử dụng bối cảnh kiến trúc ("${synthesis}") và đề cương sơ đồ đã được phê duyệt dưới đây, tạo các sơ đồ Mermaid toàn diện cho kiến trúc hệ thống. Tạo các loại sơ đồ sau:\n\n1. **Kiến trúc Hệ thống**: Tổng quan thành phần cấp cao sử dụng sơ đồ kiến trúc Mermaid\n2. **Luồng Dữ liệu**: Luồng quy trình hiển thị chuyển động dữ liệu giữa các thành phần\n3. **Thiết kế API**: Sơ đồ tuần tự cho các tương tác API chính\n4. **Lược đồ Cơ sở dữ liệu**: Sơ đồ Mối quan hệ Thực thể hiển thị mối quan hệ bảng\n5. **Pipeline Triển khai**: Sơ đồ luồng hiển thị các giai đoạn CI/CD\n6. **Phụ thuộc Thành phần**: Đồ thị hiển thị phụ thuộc module và dịch vụ\n\nĐối với mỗi sơ đồ, cung cấp:\n- Cú pháp Mermaid hợp lệ trong khối mã\n- Nhãn và mô tả rõ ràng\n- Mối quan hệ và kết nối phù hợp\n- Kiểu dáng và bố cục chuyên nghiệp\n\nĐề cương đã được phê duyệt:\n${outline}\n\nPhản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
      refinePrompt: defaultRefinePrompt,
    },
    {
      id: 'n9',
      label: 'Báo cáo Cuối cùng',
      nodeType: NodeType.TASK,
      status: NodeStatus.PENDING,
      isHumanInLoop: false,
      position: { x: 1400, y: 400 },
      details: 'Biên soạn tất cả các tạo phẩm đã tạo thành một báo cáo định nghĩa dự án duy nhất, toàn diện.',
      taskPrompt: (projectDesc, _s, prevOutputs, lang) => `Biên soạn một báo cáo cuối cùng toàn diện cho dự án "${projectDesc}". Báo cáo phải được cấu trúc tốt và định dạng bằng Markdown. Bao gồm các phần sau, sử dụng nội dung được cung cấp. Nếu một tài liệu bị thiếu, hãy nêu rõ rằng nó chưa được tạo.\n\n# Định nghĩa Dự án: ${projectDesc}\n\n## 1. Tóm tắt Điều hành\n${prevOutputs['n2'] || 'Chưa được tạo.'}\n\n## 2. Đề xuất Bộ Công nghệ\n${prevOutputs['n3'] || 'Chưa được tạo.'}\n\n## 3. Kiến trúc Hệ thống\n${prevOutputs['n4'] || 'Chưa được tạo.'}\n\n## 4. Lược đồ Cơ sở dữ liệu (SQL DDL)\n${prevOutputs['n5'] || 'Chưa được tạo.'}\n\n## 5. Thiết kế API (Đặc tả OpenAPI)\n${prevOutputs['n6'] || 'Chưa được tạo.'}\n\n## 6. Giao diện Mockup Frontend\n${prevOutputs['n7'] || 'Chưa được tạo.'}\n\n## 7. Trực quan hóa Kiến trúc\n${prevOutputs['n8'] || 'Chưa được tạo.'}\n\n---\n\n*Báo cáo này được tạo tự động bởi Hệ thống Phát triển Ứng dụng Tự trị.* Phản hồi phải bằng ${lang === 'vi' ? 'tiếng Việt' : 'tiếng Anh'}.`,
    },
  ],
  edges: [
    { id: 'e1-2', source: 'n1', target: 'n2' },
    { id: 'e1-3', source: 'n1', target: 'n3' },
    { id: 'e2-s1', source: 'n2', target: 's1' },
    { id: 'e3-s1', source: 'n3', target: 's1' },
    { id: 's1-n4', source: 's1', target: 'n4' },
    { id: 'n4-n5', source: 'n4', target: 'n5' },
    { id: 'n4-n6', source: 'n4', target: 'n6' },
    { id: 'n4-n7', source: 'n4', target: 'n7' },
    { id: 'n4-n8', source: 'n4', target: 'n8' },
    { id: 'n2-n9', source: 'n2', target: 'n9' },
    { id: 'n3-n9', source: 'n3', target: 'n9' },
    { id: 'n4-n9', source: 'n4', target: 'n9' },
    { id: 'n5-n9', source: 'n5', target: 'n9' },
    { id: 'n6-n9', source: 'n6', target: 'n9' },
    { id: 'n7-n9', source: 'n7', target: 'n9' },
    { id: 'n8-n9', source: 'n8', target: 'n9' },
  ],
};


export const NODE_STATUS_STYLES: { [key in NodeStatus]: { bg: string; text: string; border: string; icon: React.ReactNode } } = {
    [NodeStatus.PENDING]: { bg: 'bg-slate-700', text: 'text-slate-300', border: 'border-slate-500', icon: null },
    [NodeStatus.SYNTHESIZING]: { bg: 'bg-indigo-900/50', text: 'text-indigo-300', border: 'border-indigo-500 animate-pulse', icon: 'loader' },
    [NodeStatus.GENERATING_OUTLINE]: { bg: 'bg-cyan-900/50', text: 'text-cyan-300', border: 'border-cyan-500 animate-pulse', icon: 'loader' },
    [NodeStatus.AWAITING_OUTLINE_REVIEW]: { bg: 'bg-amber-900/50', text: 'text-amber-300', border: 'border-amber-500', icon: 'pause' },
    [NodeStatus.GENERATING_CONTENT]: { bg: 'bg-blue-900/50', text: 'text-blue-300', border: 'border-blue-500 animate-pulse', icon: 'loader' },
    [NodeStatus.AWAITING_REVIEW]: { bg: 'bg-yellow-900/50', text: 'text-yellow-300', border: 'border-yellow-500', icon: 'pause' },
    [NodeStatus.COMPLETED]: { bg: 'bg-green-900/50', text: 'text-green-300', border: 'border-green-500', icon: 'check' },
    [NodeStatus.FAILED]: { bg: 'bg-red-900/50', text: 'text-red-300', border: 'border-red-500', icon: 'cross' },
    [NodeStatus.SKIPPED]: { bg: 'bg-gray-800', text: 'text-gray-500', border: 'border-gray-600', icon: null },
    [NodeStatus.REFINING]: { bg: 'bg-purple-900/50', text: 'text-purple-300', border: 'border-purple-500 animate-pulse', icon: 'loader' },
};
